#!/usr/bin/env bash
set -euo pipefail

cd "$(dirname "$0")"

# =================================
# Configuration 
# =================================

# Change to required version
VALKEY_VERSION=7.2.8
VALKEY_DOWNLOAD_URL=https://github.com/valkey-io/valkey/archive/refs/tags/7.2.8.tar.gz
VALKEY_DOWNLOAD_SHA="2d990b374b783ba05e0081498718ed0640f84bc60b6db24a4bc069f9775f778c"

# =================================
# Build
# =================================

OUT_DIR=../$VALKEY_VERSION/fs
OUT_ROOTFS_TAR="$OUT_DIR"/alpine-rootfs.tar
OUT_ROOTFS_FLAT="$OUT_DIR"/alpine-rootfs-flat
OUT_FSJSON="$OUT_DIR"/alpine-fs.json
CONTAINER_NAME=alpine-v86-$VALKEY_VERSION
IMAGE_NAME=i386/alpine-v86-$VALKEY_VERSION

# Path to the versions.json file
VERSIONS_FILE="../versions.json"

mkdir -p "$OUT_DIR"
mkdir -p "../$VALKEY_VERSION/states"
docker build . --platform linux/386 --rm --tag "$IMAGE_NAME" \
    --build-arg VALKEY_VERSION="${VALKEY_VERSION}" \
    --build-arg VALKEY_DOWNLOAD_URL="${VALKEY_DOWNLOAD_URL}" \
    --build-arg VALKEY_DOWNLOAD_SHA="${VALKEY_DOWNLOAD_SHA}"

docker rm "$CONTAINER_NAME" || true
docker create --platform linux/386 -t -i --name "$CONTAINER_NAME" "$IMAGE_NAME"

docker export "$CONTAINER_NAME" -o "$OUT_ROOTFS_TAR"

# https://github.com/iximiuz/docker-to-linux/issues/19#issuecomment-1242809707
tar -f "$OUT_ROOTFS_TAR" --delete ".dockerenv" || true

./fs2json.py --out "$OUT_FSJSON" "$OUT_ROOTFS_TAR"

# Note: Not deleting old files here
mkdir -p "$OUT_ROOTFS_FLAT"
./copy-to-sha256.py "$OUT_ROOTFS_TAR" "$OUT_ROOTFS_FLAT"

echo "$OUT_ROOTFS_TAR", "$OUT_ROOTFS_FLAT" and "$OUT_FSJSON" created.

# Add version if not already present
if [ "$(cat "$VERSIONS_FILE")" = "[]" ]; then
    # File is empty or contains only []
    sed -i '' -e 's/\[\]/\["'"$VALKEY_VERSION"'"]/' "$VERSIONS_FILE"
else
    # File already contains other versions
    sed -i '' -e '$ s/]/, "'"$VALKEY_VERSION"'"]/' "$VERSIONS_FILE"
fi

echo "Version $VALKEY_VERSION appended to $VERSIONS_FILE"
